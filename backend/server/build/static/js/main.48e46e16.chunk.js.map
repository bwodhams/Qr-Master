{"version":3,"sources":["components/EditUser.js","components/Login.js","components/User.js","api.js","components/Users.js","App.js","registerServiceWorker.js","index.js"],"names":["EditUser","props","selectedUser","react_default","a","createElement","className","addingUser","name","placeholder","value","email","onChange","type","secureTextEntry","onClick","onCancel","onSave","Login","startLogin","id","e","onLogin","document","getElementById","loggedIn","undefined","User","onSelect","user","onDelete","userService","get","Promise","resolve","reject","fetch","concat","then","response","json","catch","err","create","method","body","JSON","stringify","headers","Accept","Content-Type","result","update","destroy","console","log","login","inputPassword","Users","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","users","creatingUser","handleEnableAddMode","bind","assertThisInitialized","handleSave","handleOnChange","handleBeginLogin","handleLogin","handleDelete","handleCancel","handleSelect","_this2","api","setState","event","_this3","stopPropagation","message","_this4","filter","h","emailVerifCode","_this5","accountCreated","push","target","_this6","map","components_User","key","components_EditUser","components_Login","Component","App","components_Users","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","render","src_App_0","URL","process","origin","addEventListener","status","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.48e46e16.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst EditUser = props => {\r\n  if (props.selectedUser) {\r\n    return (\r\n      <div>\r\n        <div className=\"editfields\">\r\n          <div>\r\n            <label>email: </label>\r\n            {props.addingUser\r\n              ? <input\r\n                  name=\"email\"\r\n                  placeholder=\"email\"\r\n                  value={props.selectedUser.email}\r\n                  onChange={props.onChange}\r\n                />\r\n              : <label className=\"value\">\r\n                  {props.selectedUser.email}\r\n                </label>}\r\n          </div>\r\n          <div>\r\n            <label>name: </label>\r\n            <input\r\n              name=\"name\"\r\n              value={props.selectedUser.name}\r\n              placeholder=\"name\"\r\n              onChange={props.onChange}\r\n            />\r\n          </div>\r\n          <div>\r\n            <label>Password: </label>\r\n            <input\r\n              type=\"password\"\r\n              secureTextEntry={true}\r\n              name=\"passwordHash\"\r\n              onChange={props.onChange}\r\n            />\r\n          </div>\r\n        </div>\r\n        <button onClick={props.onCancel}>Cancel</button>\r\n        <button onClick={props.onSave}>Save</button>\r\n      </div>\r\n    );\r\n  } else {\r\n    return <div />;\r\n  }\r\n};\r\n\r\nexport default EditUser;\r\n","import React from 'react';\r\n\r\nconst Login = props => {\r\n  if (props.startLogin) {\r\n    return (\r\n      <div>\r\n        <div className=\"editfields\">\r\n          <div>\r\n            <label>Email: </label>\r\n                <input\r\n                  id=\"inputEmail\"\r\n                  name=\"email\"\r\n                />\r\n          </div>\r\n          <div>\r\n            <label>Password: </label>\r\n            <input\r\n              id=\"inputPassword\"\r\n              type=\"password\"\r\n              secureTextEntry={true}\r\n              name=\"passwordHash\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <button onClick={props.onCancel}>Cancel</button>\r\n        <button onClick={e => props.onLogin(e, document.getElementById(\"inputEmail\").value, document.getElementById(\"inputPassword\").value)}>Login</button>\r\n      </div>\r\n    );\r\n  } else if(props.loggedIn === null || props.loggedIn === undefined){\r\n    return <div />;\r\n  } else if(props.loggedIn){\r\n    return (\r\n            <h2>You have logged in successfully!</h2>\r\n      );\r\n  } else if(!props.loggedIn){\r\n    return (\r\n            <h2>You are not logged in!</h2>\r\n    );\r\n  } else {\r\n    return <div />;\r\n  }\r\n};\r\n\r\nexport default Login;\r\n","import React from 'react';\r\n\r\nconst User = props => {\r\n  return (\r\n    <li\r\n      onClick={() => props.onSelect(props.user)}\r\n      className={props.user === props.selectedUser ? 'selected' : ''}\r\n    >\r\n      <button\r\n        className=\"delete-button\"\r\n        onClick={e => props.onDelete(e, props.user)}\r\n      >\r\n        Delete\r\n      </button>\r\n      <div className=\"user-element\">\r\n        <div className=\"badge\">\r\n          {props.user.email}\r\n        </div>\r\n        <div className=\"name\">\r\n          {props.user.name}\r\n        </div>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","const baseAPI = '/api';\r\n\r\nconst userService = {\r\n  get() {\r\n    return new Promise((resolve, reject) => {\r\n      fetch(`${baseAPI}/users`)\r\n        .then(response => response.json())\r\n        .then(json => resolve(json))\r\n        .catch(err => {\r\n          reject(err);\r\n        });\r\n    });\r\n  },\r\n\r\n  create(user) {\r\n    return new Promise((resolve, reject) => {\r\n      fetch(`${baseAPI}/user`, {\r\n          method: 'PUT',\r\n          body: JSON.stringify(user),\r\n          headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json'\r\n          }\r\n        })\r\n        .then(result => result.json())\r\n        .then(json => resolve(json))\r\n        .catch(err => {\r\n          reject(err);\r\n        });\r\n    });\r\n  },\r\n\r\n  update(user) {\r\n    return new Promise((resolve, reject) => {\r\n      fetch(`${baseAPI}/user`, {\r\n          method: 'POST',\r\n          body: JSON.stringify(user),\r\n          headers: {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json'\r\n          }\r\n        })\r\n        .then(result => {\r\n          resolve(result);\r\n        })\r\n        .catch(err => {\r\n          reject(err);\r\n        });\r\n    });\r\n  },\r\n\r\n  destroy(user) {\r\n    console.log(user);\r\n    return new Promise((resolve, reject) => {\r\n      fetch(`${baseAPI}/user/${user.email}`, {\r\n          method: 'DELETE'\r\n        })\r\n        .then(response => response.json())\r\n        .then(json => resolve(json))\r\n        .catch(err => {\r\n          reject(err);\r\n        });\r\n    });\r\n  },\r\n\r\n  login(email, inputPassword) {\r\n    return new Promise((resolve, reject) => {\r\n      fetch(`${baseAPI}/user/${email}&${inputPassword}`)\r\n        .then(response => response.json())\r\n        .then(json => resolve(json))\r\n        .catch(err => {\r\n          reject(err);\r\n        });\r\n    });\r\n  }\r\n};\r\n\r\nexport default userService;","import React, {\r\n  Component\r\n} from 'react';\r\n\r\nimport EditUser from './EditUser';\r\nimport Login from './Login';\r\nimport User from './User';\r\n\r\nimport api from '../api';\r\n\r\nclass Users extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      users: [],\r\n      creatingUser: false\r\n    };\r\n\r\n    this.handleEnableAddMode = this.handleEnableAddMode.bind(this);\r\n    this.handleSave = this.handleSave.bind(this);\r\n    this.handleOnChange = this.handleOnChange.bind(this);\r\n    this.handleBeginLogin = this.handleBeginLogin.bind(this);\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n    this.handleDelete = this.handleDelete.bind(this);\r\n    this.handleCancel = this.handleCancel.bind(this);\r\n    this.handleSelect = this.handleSelect.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    api.get().then(json => this.setState({\r\n      users: json\r\n    }));\r\n  }\r\n\r\n  handleSelect(user) {\r\n    this.setState({\r\n      selectedUser: user\r\n    });\r\n  }\r\n\r\n  handleBeginLogin() {\r\n    this.setState({\r\n      startLogin: true,\r\n      loggedIn: null\r\n    });\r\n  }\r\n\r\n  \r\n\r\n  handleLogin(event, email, inputPassword) {\r\n    event.stopPropagation();\r\n    api.login(email, inputPassword).then(result => {\r\n      this.setState({\r\n        startLogin: false\r\n      });\r\n      if (result.loggedIn === true) {\r\n        this.setState({\r\n          loggedIn: true\r\n        });\r\n      } else {\r\n        this.setState({\r\n          loggedIn: false\r\n        });\r\n      }\r\n      console.log(result.message);\r\n    });\r\n  }\r\n\r\n  handleDelete(event, user) {\r\n    event.stopPropagation();\r\n\r\n    api.destroy(user).then(() => {\r\n      let users = this.state.users;\r\n      users = users.filter(h => h !== user);\r\n      this.setState({\r\n        users: users\r\n      });\r\n\r\n      if (this.selectedUser === user) {\r\n        this.setState({\r\n          selectedUser: null\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  handleEnableAddMode() {\r\n    this.setState({\r\n      addingUser: true,\r\n      selectedUser: {\r\n        id: '',\r\n        name: '',\r\n        emailVerifCode: ''\r\n      }\r\n    });\r\n  }\r\n\r\n  handleCancel() {\r\n    this.setState({\r\n      addingUser: false,\r\n      selectedUser: null,\r\n      startLogin: false\r\n    });\r\n  }\r\n\r\n  handleSave() {\r\n    let users = this.state.users;\r\n    if (this.state.addingUser) {\r\n      api\r\n        .create(this.state.selectedUser)\r\n        .then(result => {\r\n          if (result.accountCreated === true) {\r\n            console.log('Successfully created!');\r\n            console.log(result.message);\r\n            users.push(this.state.selectedUser);\r\n            this.setState({\r\n              users: users,\r\n              selectedUser: null,\r\n              addingUser: false\r\n            });\r\n          }else{\r\n            console.log(result.message);\r\n          }\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n        });\r\n    } else {\r\n      api\r\n        .update(this.state.selectedUser)\r\n        .then(() => {\r\n          this.setState({\r\n            selectedUser: null\r\n          });\r\n        })\r\n        .catch(err => {});\r\n    }\r\n  }\r\n\r\n  handleOnChange(event) {\r\n    let selectedUser = this.state.selectedUser;\r\n    selectedUser[event.target.name] = event.target.value;\r\n    this.setState({\r\n      selectedUser: selectedUser\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ul className=\"users\">\r\n          {this.state.users.map(user => {\r\n            return (\r\n              <User\r\n                key={user.email}\r\n                user={user}\r\n                onSelect={this.handleSelect}\r\n                onDelete={this.handleDelete}\r\n                onLogin={this.handleLogin}\r\n                selectedUser={this.state.selectedUser}\r\n              />\r\n            );\r\n          })}\r\n        </ul>\r\n        <div className=\"editarea\">\r\n          <button onClick={this.handleEnableAddMode}>Register New Account</button>\r\n          <button onClick={this.handleBeginLogin}>Login to Account</button>\r\n          <EditUser\r\n            addingUser={this.state.addingUser}\r\n            onChange={this.handleOnChange}\r\n            selectedUser={this.state.selectedUser}\r\n            onSave={this.handleSave}\r\n            onCancel={this.handleCancel}\r\n          />\r\n          <Login\r\n            startLogin={this.state.startLogin}\r\n            loggedIn={this.state.loggedIn}\r\n            onLogin={this.handleLogin}\r\n            onCancel={this.handleCancel}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default Users;","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\n\r\nimport Users from \"./components/Users\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>QRCodes4Good Registered Accounts</h1>\r\n        <div className=\"header-bar\" />\r\n        <app-users />\r\n        <Users />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport registerServiceWorker from \"./registerServiceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}